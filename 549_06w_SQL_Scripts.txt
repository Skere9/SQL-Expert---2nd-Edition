6. Reporting Aggregated Data Using the Group Functions

Setup

Perform the Chapter 1 setup.  Next, execute the following:
SET ECHO ON

REM
REM CREATE TABLE EMPLOYEES
REM

CREATE TABLE EMPLOYEES
(  EMPLOYEE_ID         NUMBER(7)
 , SHIP_ID             NUMBER(7)
 , FIRST_NAME          VARCHAR2(20)
 , LAST_NAME           VARCHAR2(30)
 , POSITION_ID         NUMBER
 , SSN                 VARCHAR2(11)
 , DOB                 DATE
 , PRIMARY_PHONE       VARCHAR2(20)
 , CONSTRAINT          PK_EMPLOYEES 
                       PRIMARY KEY (EMPLOYEE_ID)
); 

REM
REM CREATE TABLE PAY_HISTORY
REM

CREATE TABLE PAY_HISTORY
(  PAY_HISTORY_ID      NUMBER
 , EMPLOYEE_ID         NUMBER
 , SALARY              NUMBER(10,2)
 , START_DATE          DATE
 , END_DATE            DATE
 , CONSTRAINT          PK_PAY_HISTORY_ID 
                       PRIMARY KEY (PAY_HISTORY_ID)
);

REM
REM CREATE TABLE VENDORS
REM

CREATE TABLE VENDORS
(  VENDOR_ID           NUMBER
 , VENDOR_NAME         VARCHAR2(20)
 , STATUS              NUMBER(3)
 , CATEGORY            VARCHAR2(10)
 , CONSTRAINT          PK_VENDOR_ID
                       PRIMARY KEY (VENDOR_ID)
);

REM
REM CREATE TABLE SHIP_CABINS
REM

CREATE TABLE SHIP_CABINS
(  SHIP_CABIN_ID       NUMBER
 , SHIP_ID             NUMBER(7)
 , ROOM_NUMBER         VARCHAR2(5)
 , ROOM_STYLE          VARCHAR2(10)
 , ROOM_TYPE           VARCHAR2(20)
 , WINDOW              VARCHAR2(10)
 , GUESTS              NUMBER(3)
 , SQ_FT               NUMBER(6)
 , BALCONY_SQ_FT       NUMBER(6)
 , CONSTRAINT          PK_SHIP_CABIN_ID 
                       PRIMARY KEY (SHIP_CABIN_ID)
 , CONSTRAINT          CK_WINDOW 
                       CHECK (WINDOW IN ('Ocean',
                              'Balcony', 'None'))
);

REM
REM CREATE TABLE ORDERS
REM

CREATE TABLE ORDERS
(  ORDER_ID             NUMBER
 , ORDER_DATE           DATE
 , SUBTOTAL             NUMBER
 , CONSTRAINT PK_ORDER_ID 
              PRIMARY KEY (ORDER_ID)
);

REM
REM CREATE SEQUENCE SEQ_EMPLOYEE_ID
REM

CREATE SEQUENCE SEQ_EMPLOYEE_ID;

REM
REM CREATE SEQUENCE SEQ_PAY_HISTORY_ID
REM

CREATE SEQUENCE SEQ_PAY_HISTORY_ID;

REM
REM CREATE SEQUENCE SEQ_SHIP_CABIN_ID
REM

CREATE SEQUENCE SEQ_SHIP_CABIN_ID;

REM
REM CREATE SEQUENCE SEQ_VENDOR_ID
REM

CREATE SEQUENCE SEQ_VENDOR_ID;

REM
REM CREATE SEQUENCE SEQ_ORDER_ID
REM

CREATE SEQUENCE SEQ_ORDER_ID;

REM
REM INSERT INTO ORDERS 
REM

INSERT INTO ORDERS VALUES
(SEQ_ORDER_ID.NEXTVAL, (SYSDATE-3), 230);

INSERT INTO ORDERS VALUES
(SEQ_ORDER_ID.NEXTVAL, (SYSDATE-5), 4750);

INSERT INTO ORDERS VALUES
(SEQ_ORDER_ID.NEXTVAL, (SYSDATE+3), 5000);

INSERT INTO ORDERS VALUES
(SEQ_ORDER_ID.NEXTVAL, (SYSDATE-9), 87);

INSERT INTO ORDERS VALUES
(SEQ_ORDER_ID.NEXTVAL, (SYSDATE+2), 119);

REM
REM INSERT INTO EMPLOYEES AND PAY_HISTORY 
REM

INSERT INTO EMPLOYEES
(  EMPLOYEE_ID, FIRST_NAME, LAST_NAME
 , POSITION_ID, SHIP_ID)
VALUES
(  SEQ_EMPLOYEE_ID.NEXTVAL
 , 'Howard','Hoddlestein'
 , 2, 1);

INSERT INTO PAY_HISTORY
(  PAY_HISTORY_ID
 , EMPLOYEE_ID
 , SALARY
 , START_DATE
 , END_DATE)
VALUES 
(  SEQ_PAY_HISTORY_ID.NEXTVAL
 , SEQ_EMPLOYEE_ID.CURRVAL
 , 73922
 , '04-JUN-01'
 , '');

INSERT INTO EMPLOYEES
(  EMPLOYEE_ID, FIRST_NAME, LAST_NAME
 , POSITION_ID, SHIP_ID)
VALUES
(  SEQ_EMPLOYEE_ID.NEXTVAL
 , 'Joe','Smith'
 , 2, 3); 

INSERT INTO PAY_HISTORY
(  PAY_HISTORY_ID
 , EMPLOYEE_ID
 , SALARY
 , START_DATE
 , END_DATE)
VALUES 
(  SEQ_PAY_HISTORY_ID.NEXTVAL
 , SEQ_EMPLOYEE_ID.CURRVAL
 , 47000
 , '04-JUN-01'
 , '12-DEC-07');

INSERT INTO PAY_HISTORY
(  PAY_HISTORY_ID
 , EMPLOYEE_ID
 , SALARY
 , START_DATE
 , END_DATE)
VALUES 
(  SEQ_PAY_HISTORY_ID.NEXTVAL
 , SEQ_EMPLOYEE_ID.CURRVAL
 , 58000
 , '13-JUL-09'
 , '');

INSERT INTO EMPLOYEES
(  EMPLOYEE_ID, FIRST_NAME, LAST_NAME
 , POSITION_ID, SHIP_ID)
VALUES
(  SEQ_EMPLOYEE_ID.NEXTVAL
 , 'Mike','West'
 , 2, 4);

INSERT INTO PAY_HISTORY
(  PAY_HISTORY_ID
 , EMPLOYEE_ID
 , SALARY
 , START_DATE
 , END_DATE)
VALUES 
(  SEQ_PAY_HISTORY_ID.NEXTVAL
 , SEQ_EMPLOYEE_ID.CURRVAL
 , 37450
 , '04-JUN-01'
 , '08-APR-05');

INSERT INTO PAY_HISTORY
(  PAY_HISTORY_ID
 , EMPLOYEE_ID
 , SALARY
 , START_DATE
 , END_DATE)
VALUES 
(  SEQ_PAY_HISTORY_ID.NEXTVAL
 , SEQ_EMPLOYEE_ID.CURRVAL
 , 91379
 , '05-FEB-12'
 , '');

INSERT INTO EMPLOYEES
(  EMPLOYEE_ID, FIRST_NAME, LAST_NAME
 , POSITION_ID, SHIP_ID)
VALUES
(  SEQ_EMPLOYEE_ID.NEXTVAL
 , 'Alice','Lindon'
 , 2, 3);

INSERT INTO PAY_HISTORY
(  PAY_HISTORY_ID
 , EMPLOYEE_ID
 , SALARY
 , START_DATE
 , END_DATE)
VALUES 
(  SEQ_PAY_HISTORY_ID.NEXTVAL
 , SEQ_EMPLOYEE_ID.CURRVAL
 , 45500
 , '04-JUN-01'
 , '');

INSERT INTO EMPLOYEES
(  EMPLOYEE_ID, FIRST_NAME, LAST_NAME
 , POSITION_ID, SHIP_ID)
VALUES
(  SEQ_EMPLOYEE_ID.NEXTVAL
 , 'Al','Smith'
 , 2, 1);

INSERT INTO EMPLOYEES
(  EMPLOYEE_ID, FIRST_NAME, LAST_NAME
 , POSITION_ID, SHIP_ID)
VALUES
(  SEQ_EMPLOYEE_ID.NEXTVAL
 , 'Trish','West'
 , 2, 2);

INSERT INTO EMPLOYEES
(  EMPLOYEE_ID, FIRST_NAME, LAST_NAME
 , POSITION_ID, SHIP_ID)
VALUES
(  SEQ_EMPLOYEE_ID.NEXTVAL
 , 'Buffy','Worthington'
 , 2, 1);

REM
REM INSERT INTO SHIP_CABINS
REM

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 102        , 'Suite'    , 'Standard', 'Ocean',      4,   533, 139);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 103        , 'Stateroom', 'Standard', 'Ocean',      2,   160, NULL);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 104        , 'Suite'    , 'Standard', 'None' ,      4,   533, 139);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 105        , 'Stateroom', 'Standard', 'Ocean',      3,   205, NULL);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 106        , 'Suite'    , 'Standard', 'None' ,      6,   586, 193);
  
INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 107        , 'Suite'    , 'Royal'   , 'Ocean',      5,  1524, 843);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 108        , 'Stateroom', 'Large'   , 'None' ,      2,   211, NULL);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 109        , 'Stateroom', 'Standard', 'None' ,      2,   180, NULL);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 110        , 'Stateroom', 'Large'   , 'None' ,      2,   225, NULL);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 702        , 'Suite'    , 'Presidential','None',    5,  1142, 476);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 703        , 'Suite'    , 'Royal'   , 'Ocean' ,      5,  1745, 974);

INSERT INTO SHIP_CABINS
  (  SHIP_CABIN_ID, SHIP_ID, ROOM_NUMBER, ROOM_STYLE , ROOM_TYPE ,  WINDOW, GUESTS, SQ_FT, BALCONY_SQ_FT)
VALUES               
  (  SEQ_SHIP_CABIN_ID.NEXTVAL
                  , 1      , 704        , 'Suite'    , 'Skyloft' , 'Ocean' ,      8,   722, 410);

REM
REM INSERT INTO VENDORS
REM

INSERT INTO VENDORS 
  (VENDOR_ID, VENDOR_NAME, STATUS, CATEGORY)
  VALUES
  (SEQ_VENDOR_ID.NEXTVAL, 'Acme Steaks', 17, NULL);

INSERT INTO VENDORS 
  (VENDOR_ID, VENDOR_NAME, STATUS, CATEGORY)
  VALUES
  (SEQ_VENDOR_ID.NEXTVAL, 'Acme Poker Chips', NULL, NULL);

COMMIT;

You are ready to begin.

Page 278

SELECT   VENDOR_NAME
       , STATUS
       , CATEGORY
FROM     VENDORS
; 

SELECT   COUNT(VENDOR_NAME)
       , COUNT(STATUS)
       , COUNT(CATEGORY)
FROM     VENDORS
;

SELECT   COUNT(*)
FROM     VENDORS
;

Page 279

SELECT   COUNT(*)
       , COUNT(VENDOR_NAME)
FROM     VENDORS
;

SELECT   COUNT(DISTINCT LAST_NAME)
       , COUNT(ALL LAST_NAME)
FROM     EMPLOYEES
;

Page 280

SELECT   SUM(SUBTOTAL)
FROM     ORDERS
;

SELECT   SUM(SUBTOTAL)
FROM     ORDERS
WHERE    ORDER_DATE = SYSDATE
;

Page 281

SELECT   MIN(LAST_NAME)
       , MAX(LAST_NAME) 
FROM     EMPLOYEES
;

SELECT   PAY_HISTORY_ID
       , SALARY 
FROM     PAY_HISTORY
;

SELECT   AVG(SALARY) 
FROM     PAY_HISTORY
;

Page 282

SELECT   ROUND(AVG(SALARY),2) 
FROM     PAY_HISTORY
;

SELECT   TO_CHAR(ROUND(AVG(SALARY),2),'$999,999.99') 
FROM     PAY_HISTORY
;

Page 283

CREATE TABLE TEST_MEDIAN(A NUMBER(3));

INSERT INTO TEST_MEDIAN VALUES (1);

INSERT INTO TEST_MEDIAN VALUES (10);

INSERT INTO TEST_MEDIAN VALUES (3);

SELECT   MEDIAN(A) 
FROM     TEST_MEDIAN
;

SELECT   RANK(300) WITHIN GROUP (ORDER BY SQ_FT)
FROM     SHIP_CABINS
;

Page 284

SELECT   MAX(SQ_FT) KEEP (DENSE_RANK FIRST ORDER BY GUESTS) 
         "Largest"
FROM     SHIP_CABINS
;

Page 286

SELECT   SHIP_CABIN_ID
       , ROOM_NUMBER
       , ROOM_STYLE
       , ROOM_TYPE
       , WINDOW
       , GUESTS
       , SQ_FT
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
;

SELECT   ROUND(AVG(SQ_FT),2)
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
;

Page 287

SELECT   ROUND(AVG(SQ_FT),2)
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1 
         AND 
         ROOM_STYLE = 'Stateroom'
;

SELECT   ROUND(AVG(SQ_FT),2)
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1 
         AND 
         ROOM_STYLE = 'Suite'
;

SELECT   ROOM_STYLE
       , ROUND(AVG(SQ_FT),2)
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
;

Page 288

SELECT   ROOM_STYLE
       , ROUND(AVG(SQ_FT),2) "Average SQ FT"
       , MIN(GUESTS) "Minimum # of Guests"
       , COUNT(SHIP_CABIN_ID) "Total # of cabins"
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
;

Page 289

SELECT   ROOM_TYPE
       , TO_CHAR(ROUND(AVG(SQ_FT),2),'999,999.99') "Average SQ FT"
       , MAX(GUESTS) "Maximum # of Guests"
       , COUNT(SHIP_CABIN_ID) "Total # of cabins"
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_TYPE
ORDER BY 2 DESC
;

Page 290

SELECT   TO_CHAR(ROUND(AVG(SQ_FT),2),'999,999.99') "Average SQ FT"
       , MAX(GUESTS) "Maximum # of Guests"
       , COUNT(SHIP_CABIN_ID) "Total # of cabins"
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1 
         AND 
         ROOM_TYPE = 'Royal'
ORDER BY 1 DESC
;

Page 291

SELECT   ROOM_STYLE
       , ROOM_TYPE
       , TO_CHAR(MIN(SQ_FT),'9,999') "Min"
       , TO_CHAR(MAX(SQ_FT),'9,999') "Max"
       , TO_CHAR(MIN(SQ_FT)-MAX(SQ_FT),'9,999') "Diff"
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
       , ROOM_TYPE
ORDER BY 3
;

Page 292

SELECT   TO_CHAR(MEDIAN(SQ_FT),'999.99') 
FROM     SHIP_CABINS
;

Page 293

SELECT   ROOM_STYLE
       , ROOM_TYPE
       , MAX(SQ_FT)
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
       , ROOM_TYPE
;

Page 294

(Author's note:  The next statement produces an error message.  See the book for more information.)

SELECT   ROOM_STYLE
       , ROOM_TYPE
       , AVG(MAX(SQ_FT))
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
       , ROOM_TYPE
;

SELECT   AVG(MAX(SQ_FT))
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
       , ROOM_TYPE
;

Page 295

(Author's note:  The next statement produces an error message.  See the book for more information.)

SELECT   COUNT(AVG(MAX(SQ_FT)))
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
       , ROOM_TYPE
;

SELECT   ROUND(AVG(MAX(SQ_FT)))
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
       , ROOM_TYPE
;

Page 297

SELECT   ROOM_STYLE
       , ROOM_TYPE
       , TO_CHAR(MIN(SQ_FT),'9,999') "Min"
FROM     SHIP_CABINS
WHERE    SHIP_ID = 1
GROUP BY ROOM_STYLE
       , ROOM_TYPE
HAVING   ROOM_TYPE IN ('Standard', 'Large')
         OR 
         MIN(SQ_FT) > 1200
ORDER BY 3
;

REM END
